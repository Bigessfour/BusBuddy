<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BusBuddy</name>
    </assembly>
    <members>
        <member name="T:BusBuddy.API.GrokApiClient">
            <summary>
            Client for interacting with the Grok AI API
            </summary>
        </member>
        <member name="M:BusBuddy.API.GrokApiClient.#ctor(System.Net.Http.IHttpClientFactory,Microsoft.Extensions.Configuration.IConfiguration,Serilog.ILogger)">
            <summary>
            Initializes a new instance of the GrokApiClient
            </summary>
        </member>
        <member name="M:BusBuddy.API.GrokApiClient.#ctor(System.String,System.String,Serilog.ILogger)">
            <summary>
            Alternative constructor for simpler initialization with just base URL and API key
            </summary>
        </member>
        <member name="M:BusBuddy.API.GrokApiClient.TestConnection">
            <summary>
            Tests the connection to the Grok API
            </summary>
            <returns>True if connection successful, otherwise false</returns>
        </member>
        <member name="M:BusBuddy.API.GrokApiClient.GetChatCompletionAsync(System.String,System.String,System.Int32,System.Double)">
            <summary>
            Sends a chat completion request to the Grok API
            </summary>
            <param name="prompt">The user prompt to send</param>
            <param name="model">The model to use (default: grok-3)</param>
            <param name="maxTokens">Maximum number of tokens in the response</param>
            <param name="temperature">Controls randomness (0.0-1.0)</param>
            <returns>The AI assistant's response</returns>
        </member>
        <member name="M:BusBuddy.API.GrokApiClient.ExecuteWithRetryAsync``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Execute an async function with retry logic and exponential backoff
            </summary>
        </member>
        <member name="T:BusBuddy.API.GrokCompletionResponse">
            <summary>
            Response structure for Grok API completion requests
            </summary>
        </member>
        <member name="T:BusBuddy.Data.Exceptions.DatabaseMigrationException">
            <summary>
            Exception thrown when a database migration fails.
            </summary>
        </member>
        <member name="P:BusBuddy.Data.Exceptions.DatabaseMigrationException.MigrationVersion">
            <summary>
            Gets or sets the migration version that failed.
            </summary>
        </member>
        <member name="P:BusBuddy.Data.Exceptions.DatabaseMigrationException.ActualVersion">
            <summary>
            Gets or sets the actual version of the database after the migration attempt.
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Exceptions.DatabaseMigrationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BusBuddy.Data.Exceptions.DatabaseMigrationException"/> class.
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Exceptions.DatabaseMigrationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BusBuddy.Data.Exceptions.DatabaseMigrationException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:BusBuddy.Data.Exceptions.DatabaseMigrationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BusBuddy.Data.Exceptions.DatabaseMigrationException"/> class with a specified error message
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:BusBuddy.Data.IDatabaseManager">
            <summary>
            Interface for database operations in the BusBuddy application
            </summary>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.GetTrips">
            <summary>Gets all trips from the database</summary>
            <returns>A list of trips, or an empty list if none found</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.GetDriverNames">
            <summary>Gets all driver names from the database</summary>
            <returns>A list of driver names, or an empty list if none found</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.GetBusNumbers">
            <summary>Gets all bus numbers from the database</summary>
            <returns>A list of bus numbers, or an empty list if none found</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.GetRoutes">
            <summary>Gets all routes from the database</summary>
            <returns>A list of routes, or an empty list if none found</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.AddFuelRecord(BusBuddy.Models.FuelRecord)">
            <summary>Adds a new fuel record to the database</summary>
            <param name="record">The fuel record to add</param>
            <returns>True if successful, false otherwise</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if record is null</exception>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.GetDrivers">
            <summary>Gets all drivers from the database</summary>
            <returns>A list of drivers, or an empty list if none found</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.AddOrUpdateCalendarDay(BusBuddy.Models.SchoolCalendarDay)">
            <summary>Adds or updates a calendar day in the database</summary>
            <param name="day">The calendar day to add or update</param>
            <exception cref="T:System.ArgumentNullException">Thrown if day is null</exception>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.AddOrUpdateCalendarDays(System.Collections.Generic.IEnumerable{BusBuddy.Models.SchoolCalendarDay})">
            <summary>Adds or updates multiple calendar days in the database</summary>
            <param name="days">The calendar days to add or update</param>
            <exception cref="T:System.ArgumentNullException">Thrown if days is null</exception>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.GetCalendarDay(System.DateTime)">
            <summary>Gets a calendar day for the specified date</summary>
            <param name="date">The date to retrieve</param>
            <returns>The calendar day, or null if not found</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.GetScheduledRoutes(System.Int32)">
            <summary>Gets scheduled routes for a specific calendar day ID</summary>
            <param name="calendarDayId">The calendar day ID</param>
            <returns>A list of scheduled routes, or an empty list if none found</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.GetScheduledRoutes(System.DateTime)">
            <summary>Gets scheduled routes for a specific date</summary>
            <param name="date">The date to retrieve routes for</param>
            <returns>A list of scheduled routes, or an empty list if none found</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.AddDriver(BusBuddy.Models.Driver)">
            <summary>Adds a new driver to the database</summary>
            <param name="driver">The driver to add</param>
            <returns>True if successful, false otherwise</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if driver is null</exception>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.GetActivities">
            <summary>Gets all activities from the database</summary>
            <returns>A list of activities, or an empty list if none found</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.UpdateScheduledRoute(BusBuddy.Models.ScheduledRoute)">
            <summary>Updates a scheduled route in the database</summary>
            <param name="route">The route to update</param>
            <exception cref="T:System.ArgumentNullException">Thrown if route is null</exception>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.AddActivity(BusBuddy.Models.Activity)">
            <summary>Adds a new activity to the database</summary>
            <param name="activity">The activity to add</param>
            <exception cref="T:System.ArgumentNullException">Thrown if activity is null</exception>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.AddTrip(BusBuddy.Models.Trip)">
            <summary>Adds a new trip to the database</summary>
            <param name="trip">The trip to add</param>
            <exception cref="T:System.ArgumentNullException">Thrown if trip is null</exception>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.GetTripsByDate(System.DateOnly)">
            <summary>Gets trips for a specific date</summary>
            <param name="date">The date to retrieve trips for</param>
            <returns>A list of trips, or an empty list if none found</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.GetDatabaseStatistics">
            <summary>Gets database statistics</summary>
            <returns>Database statistics</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.GetFuelRecords">
            <summary>Gets all fuel records from the database</summary>
            <returns>A list of fuel records, or an empty list if none found</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.UpdateFuelRecord(BusBuddy.Models.FuelRecord)">
            <summary>Updates a fuel record in the database</summary>
            <param name="record">The fuel record to update</param>
            <returns>True if successful, false otherwise</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if record is null</exception>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.DeleteFuelRecord(System.Int32)">
            <summary>Deletes a fuel record from the database</summary>
            <param name="recordId">The ID of the fuel record to delete</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.AddRoute(BusBuddy.Models.Route)">
            <summary>Adds a new route to the database</summary>
            <param name="route">The route to add</param>
            <exception cref="T:System.ArgumentNullException">Thrown if route is null</exception>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.UpdateRoute(BusBuddy.Models.Route)">
            <summary>Updates a route in the database</summary>
            <param name="route">The route to update</param>
            <exception cref="T:System.ArgumentNullException">Thrown if route is null</exception>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.DeleteRoute(System.Int32)">
            <summary>Deletes a route from the database</summary>
            <param name="routeId">The ID of the route to delete</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.UpdateDriver(BusBuddy.Models.Driver)">
            <summary>Updates a driver in the database</summary>
            <param name="driver">The driver to update</param>
            <returns>True if successful, false otherwise</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if driver is null</exception>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.DeleteDriver(System.Int32)">
            <summary>Deletes a driver from the database</summary>
            <param name="driverId">The ID of the driver to delete</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.GetMaintenanceRecords">
            <summary>Gets all maintenance records from the database</summary>
            <returns>A list of maintenance records, or an empty list if none found</returns>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.AddMaintenanceRecord(BusBuddy.Models.Maintenance)">
            <summary>Adds a new maintenance record to the database</summary>
            <param name="maintenance">The maintenance record to add</param>
            <exception cref="T:System.ArgumentNullException">Thrown if maintenance is null</exception>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.UpdateMaintenanceRecord(BusBuddy.Models.Maintenance)">
            <summary>Updates a maintenance record in the database</summary>
            <param name="maintenance">The maintenance record to update</param>
            <exception cref="T:System.ArgumentNullException">Thrown if maintenance is null</exception>
        </member>
        <member name="M:BusBuddy.Data.IDatabaseManager.DeleteMaintenanceRecord(System.Int32)">
            <summary>Deletes a maintenance record from the database</summary>
            <param name="maintenanceId">The ID of the maintenance record to delete</param>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IActivityRepository.GetActivitiesByDateAsync(System.String)">
            <summary>
            Gets activities by date
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IActivityRepository.GetActivitiesByBusAsync(System.Int32)">
            <summary>
            Gets activities by bus number
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IDriverRepository.GetDriverNamesAsync">
            <summary>
            Gets all driver names
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IDriverRepository.GetDriverByNameAsync(System.String)">
            <summary>
            Gets a driver by name
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IFuelRepository.GetFuelRecordsByBusAsync(System.Int32)">
            <summary>
            Gets fuel records by bus number
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IFuelRepository.GetBusNumbers">
            <summary>
            Gets all bus numbers
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IFuelRepository.GetAll">
            <summary>
            Gets all fuel records (synchronous version)
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IFuelRepository.Add(BusBuddy.Models.FuelRecord)">
            <summary>
            Adds a new fuel record (synchronous version)
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IFuelRepository.Update(BusBuddy.Models.FuelRecord)">
            <summary>
            Updates an existing fuel record
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IFuelRepository.Delete(System.Int32)">
            <summary>
            Deletes a fuel record by ID
            </summary>
        </member>
        <member name="T:BusBuddy.Data.Repositories.IRepository`2">
            <summary>
            Generic repository interface for data access operations
            </summary>
            <typeparam name="T">The entity type</typeparam>
            <typeparam name="TKey">The type of the entity's primary key</typeparam>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IRepository`2.GetAllAsync">
            <summary>
            Gets all entities
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IRepository`2.GetByIdAsync(`1)">
            <summary>
            Gets an entity by its ID
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IRepository`2.AddAsync(`0)">
            <summary>
            Adds a new entity
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IRepository`2.UpdateAsync(`0)">
            <summary>
            Updates an existing entity
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IRepository`2.DeleteAsync(`1)">
            <summary>
            Deletes an entity by its ID
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.IRouteRepository.GetRouteByNameAsync(System.String)">
            <summary>
            Gets a route by name
            </summary>
        </member>
        <member name="T:BusBuddy.Data.Repositories.ISchoolCalendarRepository">
            <summary>
            Repository interface for school calendar operations.
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.ISchoolCalendarRepository.GetCalendarDayByDateAsync(System.DateTime)">
            <summary>
            Gets a calendar day by date.
            </summary>
            <param name="date">The date to retrieve.</param>
            <returns>A task representing the asynchronous operation with the calendar day result.</returns>
        </member>
        <member name="M:BusBuddy.Data.Repositories.ISchoolCalendarRepository.GetScheduledRoutesAsync(System.Int32)">
            <summary>
            Gets scheduled routes for a calendar day.
            </summary>
            <param name="calendarDayId">The calendar day ID.</param>
            <returns>A task representing the asynchronous operation with the scheduled routes result.</returns>
        </member>
        <member name="M:BusBuddy.Data.Repositories.ISchoolCalendarRepository.GetScheduledRoutesByDateAsync(System.DateTime)">
            <summary>
            Gets scheduled routes for a date.
            </summary>
            <param name="date">The date to retrieve scheduled routes for.</param>
            <returns>A task representing the asynchronous operation with the scheduled routes result.</returns>
        </member>
        <member name="M:BusBuddy.Data.Repositories.ISchoolCalendarRepository.UpdateScheduledRouteAsync(BusBuddy.Models.ScheduledRoute)">
            <summary>
            Updates a scheduled route.
            </summary>
            <param name="scheduledRoute">The scheduled route to update.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:BusBuddy.Data.Repositories.ITripRepository.GetTripsByDateAsync(System.DateOnly)">
            <summary>
            Gets trips by date
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.ITripRepository.GetTripsByDriverAsync(System.String)">
            <summary>
            Gets trips by driver
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.ITripRepository.GetTripsByBusAsync(System.Int32)">
            <summary>
            Gets trips by bus number
            </summary>
        </member>
        <member name="T:BusBuddy.Data.Repositories.SchoolCalendarRepository">
            <summary>
            Repository for school calendar operations.
            </summary>
        </member>
        <member name="M:BusBuddy.Data.Repositories.SchoolCalendarRepository.UpdateScheduledRouteAsync(BusBuddy.Models.ScheduledRoute)">
            <summary>
            Updates a scheduled route.
            </summary>
            <param name="scheduledRoute">The scheduled route to update.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="T:BusBuddy.Drivers.DriverManager">
            <summary>
            Manages driver information, hours, and availability
            </summary>
        </member>
        <member name="M:BusBuddy.Drivers.DriverManager.#ctor(BusBuddy.Data.IDatabaseManager,Serilog.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:BusBuddy.Drivers.DriverManager"/> class.
            </summary>
            <param name="dbManager">The database manager instance.</param>
            <param name="logger">The logger instance.</param>
        </member>
        <member name="M:BusBuddy.Drivers.DriverManager.GetDriverById(System.String)">
            <summary>
            Get a driver by ID from the database
            </summary>
        </member>
        <member name="M:BusBuddy.Drivers.DriverManager.GetDriverNameById(System.String)">
            <summary>
            Helper method to get a driver name from ID
            </summary>
        </member>
        <member name="M:BusBuddy.Drivers.DriverManager.GetAllDrivers">
            <summary>
            Get a list of all active drivers
            </summary>
        </member>
        <member name="M:BusBuddy.Drivers.DriverManager.RecordHoursWorked(System.String,System.DateTime,System.Double,System.String)">
            <summary>
            Record hours worked by a driver
            </summary>
        </member>
        <member name="M:BusBuddy.Drivers.DriverManager.IsDriverAvailable(System.String,System.DateTime,System.TimeSpan,System.TimeSpan)">
            <summary>
            Check if a driver is available for assignment on a specific date and time
            </summary>
        </member>
        <member name="M:BusBuddy.Drivers.DriverManager.GetDriverWorkRecords(System.String,System.DateTime,System.DateTime)">
            <summary>
            Get work records for a driver within a date range
            </summary>
        </member>
        <member name="T:BusBuddy.Drivers.Driver">
            <summary>
            Represents a bus driver
            </summary>
        </member>
        <member name="T:BusBuddy.Drivers.WorkRecord">
            <summary>
            Represents a work record for a driver
            </summary>
        </member>
        <member name="T:BusBuddy.Models.CalendarRangeSettings">
            <summary>
            Represents settings for a range of calendar days.
            </summary>
        </member>
        <member name="M:BusBuddy.Models.CalendarRangeSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BusBuddy.Models.CalendarRangeSettings"/> class.
            </summary>
        </member>
        <member name="P:BusBuddy.Models.CalendarRangeSettings.DayType">
            <summary>
            Gets or sets the day type for the range.
            </summary>
        </member>
        <member name="P:BusBuddy.Models.CalendarRangeSettings.IsSchoolDay">
            <summary>
            Gets or sets a value indicating whether the days in the range are school days.
            </summary>
        </member>
        <member name="P:BusBuddy.Models.CalendarRangeSettings.Notes">
            <summary>
            Gets or sets the notes for the days in the range.
            </summary>
        </member>
        <member name="P:BusBuddy.Models.CalendarRangeSettings.ActiveRouteIds">
            <summary>
            Gets or sets the active route IDs for the days in the range.
            </summary>
        </member>
        <member name="T:BusBuddy.Models.DatabaseStatistics">
            <summary>
            Represents statistics about the database
            </summary>
        </member>
        <member name="P:BusBuddy.Models.DatabaseStatistics.TotalTrips">
            <summary>
            The total number of trips in the database
            </summary>
        </member>
        <member name="P:BusBuddy.Models.DatabaseStatistics.TotalDrivers">
            <summary>
            The total number of drivers in the database
            </summary>
        </member>
        <member name="P:BusBuddy.Models.DatabaseStatistics.TotalRoutes">
            <summary>
            The total number of routes in the database
            </summary>
        </member>
        <member name="P:BusBuddy.Models.DatabaseStatistics.TotalFuelRecords">
            <summary>
            The total number of fuel records in the database
            </summary>
        </member>
        <member name="P:BusBuddy.Models.DatabaseStatistics.TotalMaintenanceRecords">
            <summary>
            The total number of maintenance records in the database
            </summary>
        </member>
        <member name="P:BusBuddy.Models.DatabaseStatistics.TotalActivities">
            <summary>
            The total number of activities in the database
            </summary>
        </member>
        <member name="P:BusBuddy.Models.DatabaseStatistics.Timestamp">
            <summary>
            The timestamp of when these statistics were collected
            </summary>
        </member>
        <member name="T:BusBuddy.Models.FuelRecord">
            <summary>
            Represents a fuel purchase record for a vehicle in the fleet.
            </summary>
        </member>
        <member name="M:BusBuddy.Models.FuelRecord.IsValid">
            <summary>
            Validates that this fuel record has all required fields.
            </summary>
            <returns>True if the record is valid, false otherwise.</returns>
        </member>
        <member name="M:BusBuddy.Models.FuelRecord.Clone">
            <summary>
            Creates a deep copy of this fuel record.
            </summary>
            <returns>A new FuelRecord object with the same values.</returns>
        </member>
        <member name="T:BusBuddy.Models.ScheduledRoute">
            <summary>
            Represents a scheduled route for a specific calendar day
            </summary>
        </member>
        <member name="P:BusBuddy.Models.ScheduledRoute.ScheduledRouteID">
            <summary>
            Gets or sets the unique identifier for the scheduled route
            </summary>
        </member>
        <member name="P:BusBuddy.Models.ScheduledRoute.ScheduledRouteId">
            <summary>
            Gets or sets the unique identifier for the scheduled route (lowercase alias)
            </summary>
        </member>
        <member name="P:BusBuddy.Models.ScheduledRoute.CalendarDayID">
            <summary>
            Gets or sets the ID of the calendar day
            </summary>
        </member>
        <member name="P:BusBuddy.Models.ScheduledRoute.CalendarDayId">
            <summary>
            Gets or sets the ID of the calendar day (lowercase alias)
            </summary>
        </member>
        <member name="P:BusBuddy.Models.ScheduledRoute.RouteID">
            <summary>
            Gets or sets the ID of the route
            </summary>
        </member>
        <member name="P:BusBuddy.Models.ScheduledRoute.RouteId">
            <summary>
            Gets or sets the ID of the route (lowercase alias)
            </summary>
        </member>
        <member name="P:BusBuddy.Models.ScheduledRoute.AssignedBusNumber">
            <summary>
            Gets or sets the bus assigned to this scheduled route
            </summary>
        </member>
        <member name="P:BusBuddy.Models.ScheduledRoute.AssignedDriverID">
            <summary>
            Gets or sets the driver ID assigned to this scheduled route
            </summary>
        </member>
        <member name="P:BusBuddy.Models.ScheduledRoute.AssignedDriverId">
            <summary>
            Gets or sets the driver ID assigned to this scheduled route (lowercase alias)
            </summary>
        </member>
        <member name="M:BusBuddy.Models.ScheduledRoute.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BusBuddy.Models.ScheduledRoute"/> class with specified values
            </summary>
            <param name="scheduledRouteID">The scheduled route ID</param>
            <param name="calendarDayID">The calendar day ID</param>
            <param name="routeID">The route ID</param>
            <param name="assignedBusNumber">The assigned bus number</param>
            <param name="assignedDriverID">The assigned driver ID</param>
        </member>
        <member name="M:BusBuddy.Models.ScheduledRoute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BusBuddy.Models.ScheduledRoute"/> class
            </summary>
        </member>
        <member name="M:BusBuddy.Models.ScheduledRoute.ToString">
            <summary>
            Returns a string representation of the scheduled route
            </summary>
            <returns>A string representation of the scheduled route</returns>
        </member>
        <member name="T:BusBuddy.Models.Trip">
            <summary>
            Represents a scheduled trip or activity.
            </summary>
        </member>
        <member name="P:BusBuddy.Models.Trip.TripID">
            <summary>
            Unique identifier for the trip.
            </summary>
        </member>
        <member name="P:BusBuddy.Models.Trip.TripType">
            <summary>
            Type of trip (e.g., "Morning Route", "Afternoon Route", "Field Trip", "Sports").
            </summary>
        </member>
        <member name="P:BusBuddy.Models.Trip.Date">
            <summary>
            Date of the trip.
            </summary>
        </member>
        <member name="P:BusBuddy.Models.Trip.StartTime">
            <summary>
            Start time of the trip.
            </summary>
        </member>
        <member name="P:BusBuddy.Models.Trip.EndTime">
            <summary>
            End time of the trip.
            </summary>
        </member>
        <member name="P:BusBuddy.Models.Trip.Destination">
            <summary>
            Destination or activity description.
            </summary>
        </member>
        <member name="P:BusBuddy.Models.Trip.BusNumber">
            <summary>
            Bus number assigned to the trip.
            </summary>
        </member>
        <member name="P:BusBuddy.Models.Trip.DriverName">
            <summary>
            Name of the driver assigned to the trip.
            </summary>
        </member>
        <member name="P:BusBuddy.Models.Trip.TotalHoursDriven">
            <summary>
            For activity trips: Total hours driven for the trip.
            </summary>
        </member>
        <member name="P:BusBuddy.Models.Trip.Total_Hours_Driven">
            <summary>
            String representation of total hours driven (for compatibility)
            </summary>
        </member>
        <member name="P:BusBuddy.Models.Trip.MilesDriven">
            <summary>
            For activity trips with stipend drivers: Total miles driven.
            </summary>
        </member>
        <member name="P:BusBuddy.Models.Trip.IsCDLRoute">
            <summary>
            For route trips: Whether this is a CDL route (higher pay) or not.
            </summary>
        </member>
        <member name="P:BusBuddy.Models.Trip.TripCategory">
            <summary>
            Category of the trip: "Route" or "Activity"
            </summary>
        </member>
        <member name="M:BusBuddy.Services.FuelService.GetBusNumbers">
            <summary>
            Gets all bus numbers
            </summary>
        </member>
        <member name="M:BusBuddy.Services.FuelService.GetFuelRecords">
            <summary>
            Gets all fuel records (synchronous version)
            </summary>
        </member>
        <member name="M:BusBuddy.Services.FuelService.AddFuelRecord(BusBuddy.Models.FuelRecord)">
            <summary>
            Adds a new fuel record (synchronous version)
            </summary>
        </member>
        <member name="M:BusBuddy.Services.FuelService.UpdateFuelRecord(BusBuddy.Models.FuelRecord)">
            <summary>
            Updates an existing fuel record
            </summary>
        </member>
        <member name="M:BusBuddy.Services.FuelService.DeleteFuelRecord(System.Int32)">
            <summary>
            Deletes a fuel record by ID
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IActivityService.GetAllActivitiesAsync">
            <summary>
            Gets all activities
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IActivityService.GetActivityByIdAsync(System.Int32)">
            <summary>
            Gets an activity by ID
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IActivityService.GetActivitiesByDateAsync(System.String)">
            <summary>
            Gets activities by date
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IActivityService.GetActivitiesByBusAsync(System.Int32)">
            <summary>
            Gets activities by bus number
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IActivityService.AddActivityAsync(BusBuddy.Models.Activity)">
            <summary>
            Adds a new activity
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IActivityService.AddActivityFromTripAsync(BusBuddy.Models.ActivityTrip)">
            <summary>
            Adds a new activity from an activity trip
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IDriverService.GetAllDriversAsync">
            <summary>
            Gets all drivers
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IDriverService.GetDriverByIdAsync(System.Int32)">
            <summary>
            Gets a driver by ID
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IDriverService.GetDriverByNameAsync(System.String)">
            <summary>
            Gets a driver by name
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IDriverService.GetDriverNamesAsync">
            <summary>
            Gets all driver names
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IDriverService.AddDriverAsync(BusBuddy.Models.Driver)">
            <summary>
            Adds a new driver
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IFuelService.GetAllFuelRecordsAsync">
            <summary>
            Gets all fuel records
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IFuelService.GetFuelRecordByIdAsync(System.Int32)">
            <summary>
            Gets a fuel record by ID
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IFuelService.GetFuelRecordsByBusAsync(System.Int32)">
            <summary>
            Gets fuel records by bus number
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IFuelService.AddFuelRecordAsync(BusBuddy.Models.FuelRecord)">
            <summary>
            Adds a new fuel record
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IFuelService.AddFuelRecordFromFuelAsync(BusBuddy.Models.FuelRecord)">
            <summary>
            Adds a new fuel record from a fuel object
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IFuelService.GetBusNumbers">
            <summary>
            Gets all bus numbers
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IFuelService.GetFuelRecords">
            <summary>
            Gets all fuel records (synchronous version)
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IFuelService.AddFuelRecord(BusBuddy.Models.FuelRecord)">
            <summary>
            Adds a new fuel record (synchronous version)
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IFuelService.UpdateFuelRecord(BusBuddy.Models.FuelRecord)">
            <summary>
            Updates an existing fuel record
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IFuelService.DeleteFuelRecord(System.Int32)">
            <summary>
            Deletes a fuel record by ID
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IRouteService.GetAllRoutesAsync">
            <summary>
            Gets all routes
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IRouteService.GetRouteByIdAsync(System.Int32)">
            <summary>
            Gets a route by ID
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IRouteService.GetRouteByNameAsync(System.String)">
            <summary>
            Gets a route by name
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IRouteService.AddRouteAsync(BusBuddy.Models.Route)">
            <summary>
            Adds a new route
            </summary>
        </member>
        <member name="M:BusBuddy.Services.IRouteService.UpdateRouteAsync(BusBuddy.Models.Route)">
            <summary>
            Updates an existing route
            </summary>
        </member>
        <member name="T:BusBuddy.Services.ISchoolCalendarService">
            <summary>
            Interface for school calendar service operations.
            </summary>
        </member>
        <member name="M:BusBuddy.Services.ISchoolCalendarService.GetCalendarDayByDateAsync(System.DateTime)">
            <summary>
            Gets a calendar day by date asynchronously.
            </summary>
            <param name="date">The date to retrieve.</param>
            <returns>A task representing the asynchronous operation with the calendar day result.</returns>
        </member>
        <member name="M:BusBuddy.Services.ISchoolCalendarService.GetScheduledRoutesAsync(System.Int32)">
            <summary>
            Gets scheduled routes for a calendar day asynchronously.
            </summary>
            <param name="calendarDayId">The calendar day ID.</param>
            <returns>A task representing the asynchronous operation with the scheduled routes result.</returns>
        </member>
        <member name="M:BusBuddy.Services.ISchoolCalendarService.GetScheduledRoutesByDateAsync(System.DateTime)">
            <summary>
            Gets scheduled routes for a date asynchronously.
            </summary>
            <param name="date">The date to retrieve scheduled routes for.</param>
            <returns>A task representing the asynchronous operation with the scheduled routes result.</returns>
        </member>
        <member name="M:BusBuddy.Services.ISchoolCalendarService.AddOrUpdateCalendarDayAsync(BusBuddy.Models.SchoolCalendarDay)">
            <summary>
            Adds or updates a calendar day asynchronously.
            </summary>
            <param name="calendarDay">The calendar day to add or update.</param>
            <returns>A task representing the asynchronous operation with the result tuple.</returns>
        </member>
        <member name="M:BusBuddy.Services.ISchoolCalendarService.UpdateScheduledRouteAsync(BusBuddy.Models.ScheduledRoute)">
            <summary>
            Updates a scheduled route asynchronously.
            </summary>
            <param name="scheduledRoute">The scheduled route to update.</param>
            <returns>A task representing the asynchronous operation with the result tuple.</returns>
        </member>
        <member name="M:BusBuddy.Services.ISchoolCalendarService.GetCalendarDay(System.DateTime)">
            <summary>
            Gets a calendar day for the specified date.
            </summary>
            <param name="date">The date to retrieve.</param>
            <returns>The calendar day or a new default instance if not found.</returns>
        </member>
        <member name="M:BusBuddy.Services.ISchoolCalendarService.AddOrUpdateCalendarDay(BusBuddy.Models.SchoolCalendarDay)">
            <summary>
            Adds or updates a calendar day.
            </summary>
            <param name="day">The calendar day to add or update.</param>
        </member>
        <member name="M:BusBuddy.Services.ISchoolCalendarService.AddOrUpdateCalendarDays(System.Collections.Generic.IEnumerable{BusBuddy.Models.SchoolCalendarDay})">
            <summary>
            Adds or updates multiple calendar days.
            </summary>
            <param name="days">The collection of calendar days to add or update.</param>
        </member>
        <member name="M:BusBuddy.Services.ISchoolCalendarService.GetScheduledRoutes(System.DateTime)">
            <summary>
            Gets scheduled routes for a specific date.
            </summary>
            <param name="date">The date to retrieve scheduled routes for.</param>
            <returns>A list of scheduled routes for the specified date.</returns>
        </member>
        <member name="M:BusBuddy.Services.ISchoolCalendarService.GetRoutes">
            <summary>
            Gets all available routes.
            </summary>
            <returns>A list of all routes.</returns>
        </member>
        <member name="M:BusBuddy.Services.ITripService.GetAllTripsAsync">
            <summary>
            Gets all trips
            </summary>
        </member>
        <member name="M:BusBuddy.Services.ITripService.GetTripByIdAsync(System.Int32)">
            <summary>
            Gets a trip by ID
            </summary>
        </member>
        <member name="M:BusBuddy.Services.ITripService.GetTripsByDateAsync(System.DateOnly)">
            <summary>
            Gets trips by date
            </summary>
        </member>
        <member name="M:BusBuddy.Services.ITripService.GetTripsByDriverAsync(System.String)">
            <summary>
            Gets trips by driver
            </summary>
        </member>
        <member name="M:BusBuddy.Services.ITripService.GetTripsByBusAsync(System.Int32)">
            <summary>
            Gets trips by bus number
            </summary>
        </member>
        <member name="M:BusBuddy.Services.ITripService.AddTripAsync(BusBuddy.Models.Trip)">
            <summary>
            Adds a new trip
            </summary>
        </member>
        <member name="M:BusBuddy.Services.ITripService.CheckSchedulingConflictsAsync(BusBuddy.Models.Trip)">
            <summary>
            Checks for scheduling conflicts
            </summary>
        </member>
        <member name="T:BusBuddy.Services.SchoolCalendarService">
            <summary>
            Service for managing school calendar operations.
            </summary>
        </member>
        <member name="M:BusBuddy.Services.SchoolCalendarService.#ctor(BusBuddy.Data.Repositories.ISchoolCalendarRepository,BusBuddy.Data.Repositories.IRouteRepository,BusBuddy.Data.IDatabaseManager,Serilog.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:BusBuddy.Services.SchoolCalendarService"/> class.
            </summary>
            <param name="calendarRepository">The calendar repository.</param>
            <param name="routeRepository">The route repository.</param>
            <param name="databaseManager">The database manager.</param>
            <param name="logger">The Serilog logger.</param>
        </member>
        <member name="M:BusBuddy.Services.SchoolCalendarService.GetCalendarDayByDateAsync(System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="M:BusBuddy.Services.SchoolCalendarService.GetScheduledRoutesAsync(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:BusBuddy.Services.SchoolCalendarService.GetScheduledRoutesByDateAsync(System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="M:BusBuddy.Services.SchoolCalendarService.AddOrUpdateCalendarDayAsync(BusBuddy.Models.SchoolCalendarDay)">
            <inheritdoc/>
        </member>
        <member name="M:BusBuddy.Services.SchoolCalendarService.UpdateScheduledRouteAsync(BusBuddy.Models.ScheduledRoute)">
            <inheritdoc/>
        </member>
        <member name="M:BusBuddy.Services.SchoolCalendarService.GetCalendarDay(System.DateTime)">
            <summary>
            Gets a calendar day for the specified date.
            </summary>
            <param name="date">The date to retrieve.</param>
            <returns>The calendar day or a new default instance if not found.</returns>
        </member>
        <member name="M:BusBuddy.Services.SchoolCalendarService.AddOrUpdateCalendarDay(BusBuddy.Models.SchoolCalendarDay)">
            <summary>
            Adds or updates a calendar day.
            </summary>
            <param name="day">The calendar day to add or update.</param>
        </member>
        <member name="M:BusBuddy.Services.SchoolCalendarService.AddOrUpdateCalendarDays(System.Collections.Generic.IEnumerable{BusBuddy.Models.SchoolCalendarDay})">
            <summary>
            Adds or updates multiple calendar days.
            </summary>
            <param name="days">The collection of calendar days to add or update.</param>
        </member>
        <member name="M:BusBuddy.Services.SchoolCalendarService.GetScheduledRoutes(System.DateTime)">
            <summary>
            Gets scheduled routes for a specific date.
            </summary>
            <param name="date">The date to retrieve scheduled routes for.</param>
            <returns>A list of scheduled routes for the specified date.</returns>
        </member>
        <member name="M:BusBuddy.Services.SchoolCalendarService.GetRoutes">
            <summary>
            Gets all available routes.
            </summary>
            <returns>A list of all routes.</returns>
        </member>
        <member name="T:BusBuddy.Services.ServiceRegistration">
            <summary>
            Provides extension methods for registering BusBuddy services with the dependency injection container.
            </summary>
        </member>
        <member name="M:BusBuddy.Services.ServiceRegistration.AddBusBuddyServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Serilog.ILogger)">
            <summary>
            Adds all BusBuddy services to the dependency injection container.
            </summary>
            <param name="services">The service collection to add services to.</param>
            <param name="configuration">The application configuration.</param>
            <param name="logger">The configured logger instance.</param>
            <returns>The service collection with BusBuddy services added.</returns>
        </member>
        <member name="M:BusBuddy.UI.Forms.BaseForm.NavigateToForm(System.String,System.Boolean)">
            <summary>
            Common method to navigate to another form
            </summary>
            <param name="formName">Name of the form to navigate to</param>
            <param name="hideCurrentForm">Whether to hide the current form (defaults to true)</param>
        </member>
        <member name="M:BusBuddy.UI.Forms.BaseForm.SaveRecord">
            <summary>
            Save the current record. Override in derived forms to implement specific saving logic.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.BaseForm.EditRecord">
            <summary>
            Edit the current record. Override in derived forms to implement specific editing logic.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.BaseForm.RefreshData">
            <summary>
            Refresh the data displayed in the form. Override in derived forms to implement specific refresh logic.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.BaseForm.DeleteRecord">
            <summary>
            Delete the current record. Override in derived forms to implement specific deletion logic.
            </summary>
        </member>
        <member name="T:BusBuddy.UI.Forms.DriverForm">
            <summary>
            Form for managing driver records.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.DriverForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BusBuddy.UI.Forms.DriverForm"/> class.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.DriverForm.#ctor(BusBuddy.Services.IDriverService,Serilog.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:BusBuddy.UI.Forms.DriverForm"/> class with dependencies.
            </summary>
            <param name="driverService">The driver service to use.</param>
            <param name="logger">The logger to use.</param>
        </member>
        <member name="M:BusBuddy.UI.Forms.DriverForm.SaveRecord">
            <summary>
            Handles saving a driver record.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.DriverForm.EditRecord">
            <summary>
            Handles editing a driver record.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.DriverForm.RefreshData">
            <summary>
            Refreshes the driver data.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.DriverForm.InitializeComponent">
            <summary>
             Required method for Designer support - do not modify
             the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.FormManager.GetLogger(System.String)">
            <summary>
            Gets the configured Serilog logger, optionally with a specific context.
            </summary>
            <param name="contextName">Optional context name for the logger.</param>
            <returns>The Serilog logger instance, possibly with context.</returns>
        </member>
        <member name="M:BusBuddy.UI.Forms.FormManager.GetLogger``1">
            <summary>
            Gets a logger for the specified type.
            </summary>
            <typeparam name="T">The type to use as the logger context.</typeparam>
            <returns>A Serilog logger with the type name as context.</returns>
        </member>
        <member name="M:BusBuddy.UI.Forms.FormManager.DisplayForm(System.String,System.Windows.Forms.Form)">
            <summary>
            Displays a form by name, handling form creation and dependency injection
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.FormManager.CreateFormWithDependencies(System.Type)">
            <summary>
            Creates a form with all required dependencies properly injected
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.FormManager.DisplayFormWithProperParent(System.Windows.Forms.Form,System.Windows.Forms.Form)">
            <summary>
            Displays a form with proper parent-child relationship
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.FormManager.ConfigureLogger">
            <summary>
            Configures and returns a properly initialized Serilog logger
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.FormManager.ConfigureApiClient">
            <summary>
            Configures the API client using environment variables
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.FormManager.ConfigureGrokApiClient">
            <summary>
            Configures the Grok API client
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.FormManager.ConfigureDatabaseManager">
            <summary>
            Configures the database manager - uses API or local database based on environment
            </summary>
        </member>
        <member name="T:BusBuddy.UI.Forms.IFormNavigator">
            <summary>
            Interface for form navigation
            </summary>
        </member>
        <member name="T:BusBuddy.UI.Forms.FormNavigatorImpl">
            <summary>
            Anonymous class implementation for IFormNavigator
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.FuelForm.#ctor">
            <summary>
            Simple parameterless constructor for use with the Windows Forms Designer and FormManager.
            This should not be used in production code - use the dependency injection constructor instead.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.FuelForm.SetGrokButtonVisibility">
            <summary>
            Sets the visibility of the Test Grok button based on the availability of the Grok API client
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.FuelForm.InitializeFormData">
            <summary>
            Initializes the form data including loading bus numbers, configuring the data grid view, and loading data
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.FuelForm.ApplyCustomStyling">
            <summary>
            Apply custom styling to all controls in this form
            </summary>
        </member>
        <member name="T:BusBuddy.UI.Forms.SchoolCalendarForm">
            <summary>
            Form for managing the school calendar.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.SchoolCalendarForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BusBuddy.UI.Forms.SchoolCalendarForm"/> class.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.SchoolCalendarForm.SchoolCalendarForm_Resize(System.Object,System.EventArgs)">
            <summary>
            Handles the form resize event.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.SchoolCalendarForm.CalendarPicker_DateChanged(System.Object,System.Windows.Forms.DateRangeEventArgs)">
            <summary>
            Handles the calendar picker date changed event.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.SchoolCalendarForm.IsSchoolDayCheckBox_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the school day checkbox changed event.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.SchoolCalendarForm.SaveButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the save button click event.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.SchoolCalendarForm.ClearButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the clear button click event.
            </summary>
        </member>
        <member name="F:BusBuddy.UI.Forms.SchoolCalendarForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.SchoolCalendarForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BusBuddy.UI.Forms.SchoolCalendarForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:BusBuddy.UI.Forms.VehiclesForm">
            <summary>
            Form for managing the fleet of school buses and their details.
            </summary>
            <summary>
            Form for managing the fleet of school buses and their details.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.VehiclesForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BusBuddy.UI.Forms.VehiclesForm"/> class.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.VehiclesForm.SaveRecord">
            <summary>
            Handles saving a vehicle record.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.VehiclesForm.EditRecord">
            <summary>
            Handles editing a vehicle record.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.VehiclesForm.RefreshData">
            <summary>
            Refreshes the vehicle data.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.VehiclesForm.DeleteRecord">
            <summary>
            Handles deleting a vehicle record.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Forms.VehiclesForm.VehiclesDataGridView_SelectionChanged(System.Object,System.EventArgs)">
            <summary>
            Handles selection changes in the vehicles data grid view.
            </summary>
        </member>
        <member name="T:BusBuddy.UI.Interfaces.IWelcomeView">
            <summary>
            Interface defining the capabilities of the welcome screen view.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Interfaces.IWelcomeView.NavigateToReports">
            <summary>
            Navigates to the Reports form.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Interfaces.IWelcomeView.NavigateToSettings">
            <summary>
            Navigates to the Settings form.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Interfaces.IWelcomeView.NavigateToScheduler">
            <summary>
            Navigates to the Scheduler form.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Interfaces.IWelcomeView.NavigateToFuelRecords">
            <summary>
            Navigates to the Fuel Records form.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Interfaces.IWelcomeView.NavigateToDriverManagement">
            <summary>
            Navigates to the Driver Management form.
            </summary>
        </member>
        <member name="M:BusBuddy.UI.Interfaces.IWelcomeView.NavigateToActivities">
            <summary>
            Navigates to the Activities form.
            </summary>
        </member>
    </members>
</doc>
