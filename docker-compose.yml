version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: busbuddy-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=BusB#ddy!2025
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - busbuddy-sqlserver-data:/var/opt/mssql
      - ./docker/sql:/docker-entrypoint-initdb.d
    networks:
      - busbuddy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "bash", "-c", "</dev/tcp/localhost/1433"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ASP.NET Core Application
  webapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: busbuddy-webapp
    depends_on:
      sqlserver:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - USE_DOCKER_DB=true
      - CONNECTION_STRING=Server=sqlserver;Database=BusBuddy;User Id=BusBuddyApp;Password=App@P@ss!2025;TrustServerCertificate=True;Encrypt=False
    ports:
      - "5000:5000"
      - "5001:5001"
    networks:
      - busbuddy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Dashboard React Application
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    container_name: busbuddy-dashboard
    depends_on:
      webapp:
        condition: service_healthy
      sqlserver:
        condition: service_healthy
    environment:
      - DB_USER=BusBuddyApp
      - DB_PASSWORD=App@P@ss!2025
      - DB_SERVER=sqlserver
      - DB_DATABASE=BusBuddy
      - DB_PORT=1433
      - PORT=5000
      - NODE_ENV=production
      - REACT_APP_API_URL=http://webapp:5000/api  # Use internal Docker network hostname
    ports:
      - "3000:3000"  # React app
      - "5050:5000"  # Dashboard API server (mapped to different external port to avoid conflict)
    volumes:
      - ./docker/dashboard/.env:/app/api/.env
    networks:
      - busbuddy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

networks:
  busbuddy-network:
    driver: bridge

volumes:
  busbuddy-sqlserver-data:
